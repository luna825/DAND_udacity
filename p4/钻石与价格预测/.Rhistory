get_bivariate_boxplot(df$quality, df$total.sulfur.dioxide,
'total sulf. dioxide'),
get_bivariate_boxplot(df$quality, df$density,
'density'),
get_bivariate_boxplot(df$quality, df$pH,
'pH'),
get_bivariate_boxplot(df$quality, log10(df$sulphates),
'sulphates'),
get_bivariate_boxplot(df$quality, df$alcohol,
'alcohol'),
ncol = 4)
bp <- function(feature, label) {
return(qplot(x = rating, y = feature,
data = wq, geom = 'boxplot',
xlab = label, ylab = ''))
}
grid.arrange(bp(wq$fixed.acidity, 'fixed acidity'),
bp(wq$volatile.acidity, 'volatile acidity'),
bp(wq$citric.acid, 'citric acid'),
bp(wq$acidity, 'acidity'),
bp(wq$residual.sugar, 'residual sugar'),
bp(wq$chlorides, 'chlorides'),
bp(wq$free.sulfur.dioxide, 'free sulphur dioxide'),
bp(wq$total.sulfur.dioxide, 'total sulphur dioxide'),
bp(wq$density, 'density'),
bp(wq$pH, 'pH'),
bp(wq$sulphates, 'sulphates'),
bp(wq$alcohol, 'alcohol'),
ncol = 4)
get_bivariate_boxplot <- function(x, y, ylab) {
return(qplot(data = df, x = x, y = y, geom = 'boxplot', ylab = ylab))
}
grid.arrange(get_bivariate_boxplot(df$quality, df$fixed.acidity,
'fixed acidity'),
get_bivariate_boxplot(df$quality, df$volatile.acidity,
'volatile acidity'),
get_bivariate_boxplot(df$quality, df$citric.acid,
'citric acid'),
get_bivariate_boxplot(df$quality, df$TAC.acidity,
'TAC acidity'),
get_bivariate_boxplot(df$quality, log10(df$residual.sugar),
'residual sugar'),
get_bivariate_boxplot(df$quality, log10(df$chlorides),
'chlorides'),
get_bivariate_boxplot(df$quality, df$free.sulfur.dioxide,
'free sulf. dioxide'),
get_bivariate_boxplot(df$quality, df$total.sulfur.dioxide,
'total sulf. dioxide'),
get_bivariate_boxplot(df$quality, df$density,
'density'),
get_bivariate_boxplot(df$quality, df$pH,
'pH'),
get_bivariate_boxplot(df$quality, log10(df$sulphates),
'sulphates'),
get_bivariate_boxplot(df$quality, df$alcohol,
'alcohol'),
ncol = 4)
wq_sample <- wq[,-which(names(df) %in% c('X', 'rating))][sample(1:length(wq$quality), 40), ]
simple_cor_test <- function(x, y) {
return(cor.test(x, as.numeric(y))$estimate)
}
correlations <- c(
simple_cor_test(df$fixed.acidity, df$quality),
simple_cor_test(df$volatile.acidity, df$quality),
simple_cor_test(df$citric.acid, df$quality),
simple_cor_test(df$TAC.acidity, df$quality),
simple_cor_test(log10(df$residual.sugar), df$quality),
simple_cor_test(log10(df$chlorides), df$quality),
simple_cor_test(df$free.sulfur.dioxide, df$quality),
simple_cor_test(df$total.sulfur.dioxide, df$quality),
simple_cor_test(df$density, df$quality),
simple_cor_test(df$pH, df$quality),
simple_cor_test(log10(df$sulphates), df$quality),
simple_cor_test(df$alcohol, df$quality))
names(correlations) <- c('fixed.acidity', 'volatile.acidity', 'citric.acid',
simple_cor_test <- function(x, y) {
return(cor.test(x, as.numeric(y))$estimate)
}
correlations <- c(
simple_cor_test(df$fixed.acidity, df$quality),
simple_cor_test(df$volatile.acidity, df$quality),
simple_cor_test(df$citric.acid, df$quality),
simple_cor_test(df$TAC.acidity, df$quality),
simple_cor_test(log10(df$residual.sugar), df$quality),
simple_cor_test(log10(df$chlorides), df$quality),
simple_cor_test(df$free.sulfur.dioxide, df$quality),
simple_cor_test(df$total.sulfur.dioxide, df$quality),
simple_cor_test(df$density, df$quality),
simple_cor_test(df$pH, df$quality),
simple_cor_test(log10(df$sulphates), df$quality),
simple_cor_test(df$alcohol, df$quality))
ggcorr(
wine,
label = TRUE,
label_size = 3.25,
label_round = 3,
low = "darkred",
mid = "white",
high = "steelblue"
)
ggcorr(
wq,
label = TRUE,
label_size = 3.25,
label_round = 3,
low = "darkred",
mid = "white",
high = "steelblue"
)
ggcorr(
wq,
label = TRUE,
label_size = 3.25,
label_round = 3,
low = "darkred",
mid = "white",
high = "steelblue"
)
library(corrplot)
library(corrplot)
corrplot.mixed(cor(x = wine[2:13]), lower="number", upper="circle")
corrplot.mixed(cor(x = wq[2:13]), lower="number", upper="circle")
simple_cor_test <- function(x, y) {
return(cor.test(x, as.numeric(y))$estimate)
}
correlations <- c(
simple_cor_test(df$fixed.acidity, df$quality),
simple_cor_test(df$volatile.acidity, df$quality),
simple_cor_test(df$citric.acid, df$quality),
simple_cor_test(df$TAC.acidity, df$quality),
simple_cor_test(log10(df$residual.sugar), df$quality),
simple_cor_test(log10(df$chlorides), df$quality),
simple_cor_test(df$free.sulfur.dioxide, df$quality),
simple_cor_test(df$total.sulfur.dioxide, df$quality),
simple_cor_test(df$density, df$quality),
simple_cor_test(df$pH, df$quality),
simple_cor_test(log10(df$sulphates), df$quality),
simple_cor_test(df$alcohol, df$quality))
simple_cor_test <- function(x, y) {
return(cor.test(x, as.numeric(y))$estimate)
}
correlations <- c(
simple_cor_test(wq$fixed.acidity, wq$quality),
simple_cor_test(wq$volatile.acidity, wq$quality),
simple_cor_test(wq$citric.acid, wq$quality),
simple_cor_test(wq$TAC.acidity, wq$quality),
simple_cor_test(log10(df$residual.sugar), df$quality),
simple_cor_test(log10(df$chlorides), df$quality),
simple_cor_test(df$free.sulfur.dioxide, df$quality),
simple_cor_test(df$total.sulfur.dioxide, df$quality),
simple_cor_test(df$density, df$quality),
simple_cor_test(df$pH, df$quality),
simple_cor_test(log10(df$sulphates), df$quality),
simple_cor_test(df$alcohol, df$quality))
bp <- function(feature, label) {
return(qplot(x = label, y = feature,
data = wq, geom = 'boxplot',
xlab = '', ylab = ''))
}
# Boxplots for all 12 variables
grid.arrange(bp(wq$fixed.acidity, 'fixed acidity'),
bp(wq$volatile.acidity, 'volatile acidity'),
bp(wq$citric.acid, 'citric acid'),
bp(wq$residual.sugar, 'residual sugar'),
bp(wq$chlorides, 'chlorides'),
bp(wq$free.sulfur.dioxide, 'free sulphur dioxide'),
bp(wq$total.sulfur.dioxide, 'total sulphur dioxide'),
bp(wq$density, 'density'),
bp(wq$pH, 'pH'),
bp(wq$sulphates, 'sulphates'),
bp(wq$alcohol, 'alcohol'),
bp(wq$quality, 'quality'),
ncol = 4)
bp <- function(feature, label) {
return(qplot(x = rating, y = feature,
data = wq, geom = 'boxplot',
xlab = label, ylab = ''))
}
grid.arrange(bp(wq$fixed.acidity, 'fixed acidity'),
bp(wq$volatile.acidity, 'volatile acidity'),
bp(wq$citric.acid, 'citric acid'),
bp(wq$acidity, 'acidity'),
bp(wq$residual.sugar, 'residual sugar'),
bp(wq$chlorides, 'chlorides'),
bp(wq$free.sulfur.dioxide, 'free sulphur dioxide'),
bp(wq$total.sulfur.dioxide, 'total sulphur dioxide'),
bp(wq$density, 'density'),
bp(wq$pH, 'pH'),
bp(wq$sulphates, 'sulphates'),
bp(wq$alcohol, 'alcohol'),
ncol = 4)
grid.arrange(bp(wq$fixed.acidity, 'fixed acidity'),
bp(wq$volatile.acidity, 'volatile acidity'),
bp(wq$citric.acid, 'citric acid'),
bp(wq$acidity, 'acidity'),
bp(wq$residual.sugar, 'residual sugar'),
bp(wq$chlorides, 'chlorides'),
bp(wq$free.sulfur.dioxide, 'free sulphur dioxide'),
bp(wq$total.sulfur.dioxide, 'total sulphur dioxide'),
bp(wq$density, 'density'),
bp(wq$pH, 'pH'),
bp(wq$sulphates, 'sulphates'),
bp(wq$alcohol, 'alcohol'),
ncol = 4)
bp <- function(feature, label) {
return(qplot(x = quality, y = feature,
data = wq, geom = 'boxplot',
xlab = label, ylab = ''))
}
grid.arrange(bp(wq$fixed.acidity, 'fixed acidity'),
bp(wq$volatile.acidity, 'volatile acidity'),
bp(wq$citric.acid, 'citric acid'),
bp(wq$acidity, 'acidity'),
bp(wq$residual.sugar, 'residual sugar'),
bp(wq$chlorides, 'chlorides'),
bp(wq$free.sulfur.dioxide, 'free sulphur dioxide'),
bp(wq$total.sulfur.dioxide, 'total sulphur dioxide'),
bp(wq$density, 'density'),
bp(wq$pH, 'pH'),
bp(wq$sulphates, 'sulphates'),
bp(wq$alcohol, 'alcohol'),
ncol = 4)
get_bivariate_boxplot <- function(x, y, ylab) {
return(qplot(data = df, x = x, y = y, geom = 'boxplot', ylab = ylab))
}
grid.arrange(get_bivariate_boxplot(df$quality, df$fixed.acidity,
'fixed acidity'),
get_bivariate_boxplot(df$quality, df$volatile.acidity,
'volatile acidity'),
get_bivariate_boxplot(df$quality, df$citric.acid,
'citric acid'),
get_bivariate_boxplot(df$quality, df$TAC.acidity,
'TAC acidity'),
get_bivariate_boxplot(df$quality, log10(df$residual.sugar),
'residual sugar'),
get_bivariate_boxplot(df$quality, log10(df$chlorides),
'chlorides'),
get_bivariate_boxplot(df$quality, df$free.sulfur.dioxide,
'free sulf. dioxide'),
get_bivariate_boxplot(df$quality, df$total.sulfur.dioxide,
'total sulf. dioxide'),
get_bivariate_boxplot(df$quality, df$density,
'density'),
get_bivariate_boxplot(df$quality, df$pH,
'pH'),
get_bivariate_boxplot(df$quality, log10(df$sulphates),
'sulphates'),
get_bivariate_boxplot(df$quality, df$alcohol,
'alcohol'),
ncol = 4)
grid.arrange(get_bivariate_boxplot(df$rating, df$fixed.acidity,
'fixed acidity'),
get_bivariate_boxplot(df$rating, df$volatile.acidity,
'volatile acidity'),
get_bivariate_boxplot(df$rating, df$citric.acid,
'citric acid'),
get_bivariate_boxplot(df$rating, df$TAC.acidity,
'TAC acidity'),
get_bivariate_boxplot(df$rating, log10(df$residual.sugar),
'residual sugar'),
get_bivariate_boxplot(df$rating, log10(df$chlorides),
'chlorides'),
get_bivariate_boxplot(df$rating, df$free.sulfur.dioxide,
'free sulf. dioxide'),
get_bivariate_boxplot(df$rating, df$total.sulfur.dioxide,
'total sulf. dioxide'),
get_bivariate_boxplot(df$rating, df$density,
'density'),
get_bivariate_boxplot(df$rating, df$pH,
'pH'),
get_bivariate_boxplot(df$rating, log10(df$sulphates),
'sulphates'),
get_bivariate_boxplot(df$rating, df$alcohol,
'alcohol'),
ncol = 4)
bp <- function(feature, label) {
return(qplot(x = quality, y = feature,
data = wq, geom = 'boxplot',
xlab = label, ylab = ''))
}
grid.arrange(bp(wq$fixed.acidity, 'fixed acidity'),
bp(wq$volatile.acidity, 'volatile acidity'),
bp(wq$citric.acid, 'citric acid'),
bp(wq$acidity, 'acidity'),
bp(wq$residual.sugar, 'residual sugar'),
bp(wq$chlorides, 'chlorides'),
bp(wq$free.sulfur.dioxide, 'free sulphur dioxide'),
bp(wq$total.sulfur.dioxide, 'total sulphur dioxide'),
bp(wq$density, 'density'),
bp(wq$pH, 'pH'),
bp(wq$sulphates, 'sulphates'),
bp(wq$alcohol, 'alcohol'),
ncol = 4)
cor(wq[, array(1:12)])
library(corrplot)
corrplot.mixed(cor(x = wq[2:13]), lower="number", upper="circle")
# Declare empty variables for loop
corr <- NULL
corr_log <- NULL
# Loop through columns in wq dataframe and perform correlation test
for (i in names(wq)){
corr[i] <- cor.test(as.numeric(wq[,i]),
as.numeric(wq$quality))$estimate
corr_log[i] <- cor.test(log10(as.numeric(wq[,i])),
as.numeric(wq$quality))$estimate
}
# Print out correlation values
corr
corr_log
corr <- NULL
# Loop through columns in wq dataframe and perform correlation test
for (i in names(wq)){
corr[i] <- cor.test(as.numeric(wq[,i]),
as.numeric(wq$quality))$estimate
}
# Print out correlation values
corr
corr <- NULL
for (i in names(wq)){
corr[i] <- cor.test(as.numeric(wq[,i]),
as.numeric(wq$quality))$estimate
}
corr
set.seed(1)
wq_sample <- wq[,-which(names(df) %in% c('X', 'rating'))][sample(1:length(wq$quality), 40), ]
ggpairs(wq_sample,
params = c(shape = I('.'), outlier.shape = I('.'))) +
theme(axis.text =element_blank(),
axis.title = element_blank(),
axis.line=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank())
grid.arrange(qplot(x = rating, y = wq$fixed.acidity, data = wq, geom = 'boxplot', xlab = 'fixed acidity ', ylab = '').
grid.arrange(qplot(x = rating, y = wq$fixed.acidity, data = wq, geom = 'boxplot', xlab = 'fixed acidity ', ylab = ''),
ncol = 1
)
grid.arrange(qplot(x = rating, y = wq$fixed.acidity, data = wq, geom = 'boxplot', xlab = 'fixed acidity ', ylab = ''),
qplot(x = rating, y = wq$volatile.acidity, data = wq, geom = 'boxplot', xlab = 'volatile acidity ', ylab = ''),
qplot(x = rating, y = wq$citric.acid, data = wq, geom = 'boxplot', xlab = 'citric acid ', ylab = ''),
qplot(x = rating, y = wq$acidity, data = wq, geom = 'boxplot', xlab = 'acidity ', ylab = ''),
ncol = 4
)
grid.arrange(qplot(x = rating, y = wq$fixed.acidity, data = wq, geom = 'boxplot', xlab = 'fixed acidity ', ylab = ''),
ncol = 4
)
grid.arrange(qplot(x = rating, y = wq$fixed.acidity, data = wq, geom = 'boxplot', xlab = 'fixed acidity ', ylab = ''),
qplot(x = rating, y = wq$volatile.acidity, data = wq, geom = 'boxplot', xlab = 'volatile acidity ', ylab = ''),
ncol = 4
)
grid.arrange(qplot(x = rating, y = wq$fixed.acidity, data = wq, geom = 'boxplot', xlab = 'fixed acidity ', ylab = ''),
qplot(x = rating, y = wq$volatile.acidity, data = wq, geom = 'boxplot', xlab = 'volatile acidity ', ylab = ''),
qplot(x = rating, y = wq$citric.acid, data = wq, geom = 'boxplot', xlab = 'citric acid ', ylab = ''),
ncol = 4
)
grid.arrange(qplot(x = rating, y = wq$fixed.acidity, data = wq, geom = 'boxplot', xlab = 'fixed acidity ', ylab = ''),
qplot(x = rating, y = wq$volatile.acidity, data = wq, geom = 'boxplot', xlab = 'volatile acidity ', ylab = ''),
qplot(x = rating, y = wq$citric.acid, data = wq, geom = 'boxplot', xlab = 'citric acid ', ylab = ''),
qplot(x = rating, y = wq$acidity, data = wq, geom = 'boxplot', xlab = 'acidity ', ylab = ''),
ncol = 4
)
bp <- function(feature, label) {
return(qplot(x = rating, y = feature,
data = wq, geom = 'boxplot',
xlab = label, ylab = ''))
}
grid.arrange(bp(wq$fixed.acidity, 'fixed acidity'),
bp(wq$volatile.acidity, 'volatile acidity'),
bp(wq$citric.acid, 'citric acid'),
bp(wq$residual.sugar, 'residual sugar'),
bp(wq$chlorides, 'chlorides'),
bp(wq$free.sulfur.dioxide, 'free sulphur dioxide'),
bp(wq$total.sulfur.dioxide, 'total sulphur dioxide'),
bp(wq$density, 'density'),
bp(wq$pH, 'pH'),
bp(wq$sulphates, 'sulphates'),
bp(wq$alcohol, 'alcohol'),
ncol = 4)
ggplot(data = df,
aes(x = citric.acid, y = volatile.acidity,
color = quality)) +
geom_point() +
facet_wrap(~rating)
ggplot(data = wq,
aes(x = citric.acid, y = volatile.acidity,
color = quality)) +
geom_point() +
facet_wrap(~rating)
ggplot(data = wq,
aes(x = alcohol, y = log10(sulphates),
color = quality)) +
geom_point() +
facet_wrap(~rating)
ggplot(data = wq,
aes(x = pH, y = alcohol, color = quality)) +
geom_point() +
facet_wrap(~rating)
grid.arrange(ggplot(data = wq, aes(x = quality, y = fixed.acidity, fill = quality)) +
xlab('Quality') +
ylab('Fixed Acidity') +
geom_boxplot(),
ggplot(data = wq, aes(x = quality, y = volatile.acidity, fill = quality)) +
xlab('Quality') +
ylab('Volitile  Acidity') +
geom_boxplot(),
ggplot(data = wq, aes(x = quality, y = citric.acidity, fill = quality)) +
xlab('Quality') +
ylab('Citric Acidity') +
geom_boxplot(),
ggplot(data = wq, aes(x = quality, y = pH, fill = quality)) +
xlab('Quality') +
ylab('PH') +
geom_boxplot())
grid.arrange(ggplot(data = wq, aes(x = quality, y = fixed.acidity, fill = quality)) +
xlab('Quality') +
ylab('Fixed Acidity') +
geom_boxplot(),
ggplot(data = wq, aes(x = quality, y = volatile.acidity, fill = quality)) +
xlab('Quality') +
ylab('Volitile  Acidity') +
geom_boxplot(),
ggplot(data = wq, aes(x = quality, y = citric.acid, fill = quality)) +
xlab('Quality') +
ylab('Citric Acidity') +
geom_boxplot(),
ggplot(data = wq, aes(x = quality, y = pH, fill = quality)) +
xlab('Quality') +
ylab('PH') +
geom_boxplot())
make_scatter(rwq$alcohol) +
ggtitle("Quality vs Alcohol") +
xlab("Alcohol (% by volume)") +
scale_x_continuous(breaks = seq(8, 15, 1), limits = c(8, 15)) +
scale_y_continuous(breaks = seq(1, 10, 1), limits = c(1, 10))
ggplot(data = wq, aes( x = quality, y = alcohol, fill = rating) +
geom_point() +
xlab('Alcohol') +
ylab('Volatile Acidity'))
ggplot(data = wq, aes( x = quality, y = alcohol, fill = rating) +
geom_boxplot() +
xlab('Alcohol') +
ylab('Volatile Acidity'))
ggplot(data = df, aes(x = quality, y = alcohol,
fill = rating)) +
geom_boxplot() +
ggtitle('Alcohol Levels in Different Wine Qualities') +
xlab('Quality') +
ylab('Alcohol (% volume)')
ggplot(data = wq, aes(x = quality, y = alcohol,
fill = rating)) +
geom_boxplot() +
ggtitle('Alcohol Levels in Different Wine Qualities') +
xlab('Quality') +
ylab('Alcohol (% volume)')
ggplot(data = wq, aes( x = quality, y = alcohol, fill = rating)) +
geom_boxplot() +
xlab('Alcohol') +
ylab('Volatile Acidity')
ggplot(data = wq, aes( x = quality, y = alcohol, fill = rating)) +
geom_point() +
xlab('Alcohol') +
ylab('Volatile Acidity')
ggplot(data = wq, aes( x = quality, y = alcohol, fill = rating)) +
geom_boxplot() +
xlab('Alcohol') +
ylab('Volatile Acidity')
ggplot(data = wq, aes(x = alcohol, y = volatile.acidity, color = rating)) +
geom_point() +
xlab('Alcohol') +
ylab('Volatile Acidity')
ggplot(data = subset(df, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data = subset(wq, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data = subset(wq, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data = subset(wq, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data = subset(wq, rating != 'average'),
aes(x = alcohol, y = volatile.acidity, color = rating)) +
geom_point() +
xlab('Alcohol') +
ylab('Volatile Acidity')
wq <- read.csv('wineQualityReds.csv')
library(knitr)
knit("p.html")
library(knitr)
knit("r-report.html")
library(rmarkdown)
render("D:\数据分析--纳米学位\p4\p\p.Rmd", "html_document")
library(rmarkdown)
render("C:\Users\10415\Documents\R\p.Rmd", "html_document")
render("C:/Users/10415/Documents/R/p.Rmd", "html_document")
